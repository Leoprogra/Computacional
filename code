import cv2
import matplotlib.pyplot as plt
from tkinter import Tk, Button, filedialog
import os

# --------------------------------------Funciones auxiliares---------------------------------------------------
def mostrar_comparacion(imagen_filtrada, titulo="Filtro"):
    original_rgb = cv2.cvtColor(imagen, cv2.COLOR_BGR2RGB)
    filtrada_rgb = cv2.cvtColor(imagen_filtrada, cv2.COLOR_BGR2RGB)

    plt.figure(figsize=(10, 5))
    
    plt.subplot(1, 2, 1)
    plt.imshow(original_rgb)
    plt.title("Original")
    plt.axis('off')

    plt.subplot(1, 2, 2)
    plt.imshow(filtrada_rgb)
    plt.title(titulo)
    plt.axis('off')

    plt.tight_layout()
    plt.show()

def guardar_imagen(imagen_filtrada, nombre_filtro):
    carpeta_salida = "imagenes_filtradas"
    os.makedirs(carpeta_salida, exist_ok=True)
    nombre_archivo = f"{nombre_filtro}.png"
    ruta_salida = os.path.join(carpeta_salida, nombre_archivo)
    
    cv2.imwrite(ruta_salida, imagen_filtrada)
    print(f"✅ Imagen guardada como: {ruta_salida}")

def imprimir_info_imagen(img):
    print("ℹ️ Información de la imagen cargada:")
    print(f"- Dimensiones: {img.shape}")
    print(f"- Alto: {img.shape[0]} px")
    print(f"- Ancho: {img.shape[1]} px")
    print(f"- Canales: {img.shape[2] if len(img.shape) == 3 else 1}")

# --------------------------------------Filtros de imagen------------------------------------------------------
def aplicar_media():
    filtrada = cv2.blur(imagen, (5, 5))
    mostrar_comparacion(filtrada, "Filtro de Media")
    guardar_imagen(filtrada, "filtro_media")

def aplicar_mediana():
    filtrada = cv2.medianBlur(imagen, 5)
    mostrar_comparacion(filtrada, "Filtro de Mediana")
    guardar_imagen(filtrada, "filtro_mediana")

def aplicar_laplaciano():
    laplaciano = cv2.Laplacian(imagen, cv2.CV_64F)
    filtrada = cv2.convertScaleAbs(laplaciano)
    mostrar_comparacion(filtrada, "Filtro Laplaciano")
    guardar_imagen(filtrada, "filtro_laplaciano")

def aplicar_sobel():
    sobel_x = cv2.Sobel(imagen, cv2.CV_64F, 1, 0, ksize=3)
    sobel_y = cv2.Sobel(imagen, cv2.CV_64F, 0, 1, ksize=3)
    sobel = cv2.magnitude(sobel_x, sobel_y)
    filtrada = cv2.convertScaleAbs(sobel)
    mostrar_comparacion(filtrada, "Filtro Sobel")
    guardar_imagen(filtrada, "filtro_sobel")

# --------------------------------------Cargar imagen----------------------------------------------------------
Tk().withdraw()
ruta_imagen = filedialog.askopenfilename(
    title="Selecciona una imagen",
    filetypes=[("Archivos de imagen", "*.jpg;*.jpeg;*.png;*.bmp")]
)

if ruta_imagen:
    imagen = cv2.imread(ruta_imagen)
    if imagen is None:
        print("❌ Error: No se pudo cargar la imagen.")
        exit()

    imprimir_info_imagen(imagen)

    root = Tk()
    root.title("Aplicar Filtros a Imagen")

    Button(root, text="Filtro de Media", command=aplicar_media, width=30, pady=5).pack(pady=5)
    Button(root, text="Filtro de Mediana", command=aplicar_mediana, width=30, pady=5).pack(pady=5)
    Button(root, text="Filtro Laplaciano", command=aplicar_laplaciano, width=30, pady=5).pack(pady=5)
    Button(root, text="Filtro Sobel", command=aplicar_sobel, width=30, pady=5).pack(pady=5)

    root.mainloop()

else:
    print("⚠️ No se seleccionó ninguna imagen.")
